1399635505092|-1||debug||com.p6spy.engine.common.P6SpyOptions reloading properties
2014.05.09 13:38:25|-1||info||Using properties file: /home/przodownik/blog/commonDao/build/resources/main/spy.properties
2014.05.09 13:38:25|-1||info||No value in environment for: getInclude, using: null
2014.05.09 13:38:25|-1||info||No value in environment for: getExecutionThreshold, using: 0
2014.05.09 13:38:25|-1||info||No value in environment for: getAutoflush, using: false
2014.05.09 13:38:25|-1||info||No value in environment for: getExclude, using: null
2014.05.09 13:38:25|-1||info||No value in environment for: getExcludecategories, using: 
2014.05.09 13:38:25|-1||info||No value in environment for: getIncludecategories, using: error, info, batch, debug,statement,commit,rollback,result
2014.05.09 13:38:25|-1||info||No value in environment for: getLogfile, using: spy.log
2014.05.09 13:38:25|-1||info||No value in environment for: getRealdriver, using: org.hsqldb.jdbcDriver
2014.05.09 13:38:25|-1||info||No value in environment for: getRealdriver2, using: null
2014.05.09 13:38:25|-1||info||No value in environment for: getRealdriver3, using: null
2014.05.09 13:38:25|-1||info||No value in environment for: getAppend, using: true
2014.05.09 13:38:25|-1||info||No value in environment for: getSpydriver, using: com.p6spy.engine.spy.P6SpyDriver
2014.05.09 13:38:25|-1||info||No value in environment for: getDateformat, using: yyyy.MM.dd HH:mm:ss
2014.05.09 13:38:25|-1||info||No value in environment for: getDateformatter, using: java.text.SimpleDateFormat@b1040140
2014.05.09 13:38:25|-1||info||No value in environment for: getStringmatcher, using: com.p6spy.engine.common.SubstringMatcher
2014.05.09 13:38:25|-1||info||No value in environment for: getStringMatcherEngine, using: com.p6spy.engine.common.SubstringMatcher@6d86ac22
2014.05.09 13:38:25|-1||info||No value in environment for: getStackTraceClass, using: null
2014.05.09 13:38:25|-1||info||No value in environment for: getSQLExpression, using: null
2014.05.09 13:38:25|-1||info||No value in environment for: getReloadProperties, using: false
2014.05.09 13:38:25|-1||info||No value in environment for: getRealDataSource, using: null
2014.05.09 13:38:25|-1||info||No value in environment for: getReloadPropertiesInterval, using: -1
2014.05.09 13:38:25|-1||info||No value in environment for: getRealDataSourceClass, using: null
2014.05.09 13:38:25|-1||info||No value in environment for: getJNDIContextFactory, using: null
2014.05.09 13:38:25|-1||info||No value in environment for: getJNDIContextProviderURL, using: null
2014.05.09 13:38:25|-1||info||No value in environment for: getJNDIContextCustom, using: null
2014.05.09 13:38:25|-1||info||No value in environment for: getRealDataSourceProperties, using: null
2014.05.09 13:38:25|-1||info||No value in environment for: getDeregisterDrivers, using: false
2014.05.09 13:38:25|-1||info||No value in environment for: getUsePrefix, using: false
2014.05.09 13:38:25|-1||info||No value in environment for: getFilter, using: false
2014.05.09 13:38:25|-1||info||No value in environment for: getAppender, using: com.p6spy.engine.logging.appender.FileLogger
2014.05.09 13:38:25|-1||info||No value in environment for: getStackTrace, using: false
2014.05.09 13:38:25|-1||info||reloadProperties() successful
2014.05.09 13:38:25|-1||debug||Registered driver: org.hsqldb.jdbcDriver, realdriver: org.hsqldb.jdbcDriver@34a962f0
2014.05.09 13:38:25|-1||debug||Registered factory: com.p6spy.engine.logging.P6LogFactory with options: null
2014.05.09 13:38:25|-1||debug||Driver manager reporting driver registered: org.hsqldb.jdbc.JDBCDriver@16232ab5
2014.05.09 13:38:25|-1||debug||Driver manager reporting driver registered: com.mysql.jdbc.Driver@11e74e5a
2014.05.09 13:38:25|-1||debug||Driver manager reporting driver registered: org.postgresql.Driver@7a185688
2014.05.09 13:38:25|-1||debug||Driver manager reporting driver registered: com.p6spy.engine.spy.P6SpyDriver@6c9624fc
2014.05.09 13:38:25|8|0|statement||select sequence_name from information_schema.system_sequences
2014.05.09 13:38:25|0|0|result||select sequence_name from information_schema.system_sequences
2014.05.09 13:38:25|-1||resultset|select sequence_name from information_schema.system_sequences|SEQUENCE_NAME = LOB_ID
2014.05.09 13:38:25|0|0|result||select sequence_name from information_schema.system_sequences
2014.05.09 13:38:25|4|1|statement||SET DATABASE EVENT LOG SQL LEVEL 3
2014.05.09 13:38:25|0|1|statement||DROP SEQUENCE unique_id_seq IF EXISTS
2014.05.09 13:38:25|1|1|statement||CREATE SEQUENCE unique_id_seq
2014.05.09 13:38:25|0|1|statement||DROP TABLE qrtz_locks IF EXISTS
2014.05.09 13:38:25|0|1|statement||DROP TABLE qrtz_scheduler_state IF EXISTS
2014.05.09 13:38:25|0|1|statement||DROP TABLE qrtz_fired_triggers IF EXISTS
2014.05.09 13:38:25|1|1|statement||DROP TABLE qrtz_paused_trigger_grps IF EXISTS
2014.05.09 13:38:25|0|1|statement||DROP TABLE qrtz_calendars IF EXISTS
2014.05.09 13:38:25|0|1|statement||DROP TABLE qrtz_blob_triggers IF EXISTS
2014.05.09 13:38:25|1|1|statement||DROP TABLE qrtz_cron_triggers IF EXISTS
2014.05.09 13:38:25|0|1|statement||DROP TABLE qrtz_simple_triggers IF EXISTS
2014.05.09 13:38:25|0|1|statement||DROP TABLE qrtz_simprop_triggers IF EXISTS
2014.05.09 13:38:25|0|1|statement||DROP TABLE qrtz_triggers IF EXISTS
2014.05.09 13:38:25|1|1|statement||DROP TABLE qrtz_job_details IF EXISTS
2014.05.09 13:38:25|1|1|statement||CREATE TABLE QRTZ_JOB_DETAILS ( SCHED_NAME VARCHAR(120) NOT NULL, JOB_NAME VARCHAR(200) NOT NULL, JOB_GROUP VARCHAR(200) NOT NULL, DESCRIPTION VARCHAR(250) NULL, JOB_CLASS_NAME VARCHAR(250) NOT NULL, IS_DURABLE BOOLEAN NOT NULL, IS_NONCONCURRENT BOOLEAN NOT NULL, IS_UPDATE_DATA BOOLEAN NOT NULL, REQUESTS_RECOVERY BOOLEAN NOT NULL, JOB_DATA BLOB NULL, PRIMARY KEY (SCHED_NAME,JOB_NAME,JOB_GROUP) )
2014.05.09 13:38:25|2|1|statement||CREATE TABLE QRTZ_TRIGGERS ( SCHED_NAME VARCHAR(120) NOT NULL, TRIGGER_NAME VARCHAR(200) NOT NULL, TRIGGER_GROUP VARCHAR(200) NOT NULL, JOB_NAME VARCHAR(200) NOT NULL, JOB_GROUP VARCHAR(200) NOT NULL, DESCRIPTION VARCHAR(250) NULL, NEXT_FIRE_TIME NUMERIC(13) NULL, PREV_FIRE_TIME NUMERIC(13) NULL, PRIORITY INTEGER NULL, TRIGGER_STATE VARCHAR(16) NOT NULL, TRIGGER_TYPE VARCHAR(8) NOT NULL, START_TIME NUMERIC(13) NOT NULL, END_TIME NUMERIC(13) NULL, CALENDAR_NAME VARCHAR(200) NULL, MISFIRE_INSTR NUMERIC(2) NULL, JOB_DATA BLOB NULL, PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP), FOREIGN KEY (SCHED_NAME,JOB_NAME,JOB_GROUP) REFERENCES QRTZ_JOB_DETAILS(SCHED_NAME,JOB_NAME,JOB_GROUP) )
2014.05.09 13:38:25|1|1|statement||CREATE TABLE qrtz_simple_triggers ( SCHED_NAME VARCHAR(120) NOT NULL, TRIGGER_NAME VARCHAR(200) NOT NULL, TRIGGER_GROUP VARCHAR(200) NOT NULL, REPEAT_COUNT NUMERIC(7) NOT NULL, REPEAT_INTERVAL NUMERIC(12) NOT NULL, TIMES_TRIGGERED NUMERIC(10) NOT NULL, PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP), FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) )
2014.05.09 13:38:25|1|1|statement||CREATE TABLE qrtz_cron_triggers ( SCHED_NAME VARCHAR(120) NOT NULL, TRIGGER_NAME VARCHAR(200) NOT NULL, TRIGGER_GROUP VARCHAR(200) NOT NULL, CRON_EXPRESSION VARCHAR(120) NOT NULL, TIME_ZONE_ID VARCHAR(80), PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP), FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) )
2014.05.09 13:38:25|1|1|statement||CREATE TABLE qrtz_simprop_triggers ( SCHED_NAME VARCHAR(120) NOT NULL, TRIGGER_NAME VARCHAR(200) NOT NULL, TRIGGER_GROUP VARCHAR(200) NOT NULL, STR_PROP_1 VARCHAR(512) NULL, STR_PROP_2 VARCHAR(512) NULL, STR_PROP_3 VARCHAR(512) NULL, INT_PROP_1 NUMERIC(9) NULL, INT_PROP_2 NUMERIC(9) NULL, LONG_PROP_1 NUMERIC(13) NULL, LONG_PROP_2 NUMERIC(13) NULL, DEC_PROP_1 NUMERIC(13,4) NULL, DEC_PROP_2 NUMERIC(13,4) NULL, BOOL_PROP_1 BOOLEAN NULL, BOOL_PROP_2 BOOLEAN NULL, PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP), FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) )
2014.05.09 13:38:25|1|1|statement||CREATE TABLE qrtz_blob_triggers ( SCHED_NAME VARCHAR(120) NOT NULL, TRIGGER_NAME VARCHAR(200) NOT NULL, TRIGGER_GROUP VARCHAR(200) NOT NULL, BLOB_DATA BINARY NULL, PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP), FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) )
2014.05.09 13:38:25|1|1|statement||CREATE TABLE qrtz_calendars ( SCHED_NAME VARCHAR(120) NOT NULL, CALENDAR_NAME VARCHAR(200) NOT NULL, CALENDAR BINARY NOT NULL, PRIMARY KEY (SCHED_NAME,CALENDAR_NAME) )
2014.05.09 13:38:25|0|1|statement||CREATE TABLE qrtz_paused_trigger_grps ( SCHED_NAME VARCHAR(120) NOT NULL, TRIGGER_GROUP VARCHAR(200) NOT NULL, PRIMARY KEY (SCHED_NAME,TRIGGER_GROUP) )
2014.05.09 13:38:25|2|1|statement||CREATE TABLE qrtz_fired_triggers ( SCHED_NAME VARCHAR(120) NOT NULL, ENTRY_ID VARCHAR(95) NOT NULL, TRIGGER_NAME VARCHAR(200) NOT NULL, TRIGGER_GROUP VARCHAR(200) NOT NULL, INSTANCE_NAME VARCHAR(200) NOT NULL, FIRED_TIME NUMERIC(13) NOT NULL, PRIORITY INTEGER NOT NULL, STATE VARCHAR(16) NOT NULL, JOB_NAME VARCHAR(200) NULL, JOB_GROUP VARCHAR(200) NULL, IS_NONCONCURRENT BOOLEAN NULL, REQUESTS_RECOVERY BOOLEAN NULL, PRIMARY KEY (SCHED_NAME,ENTRY_ID) )
2014.05.09 13:38:25|1|1|statement||CREATE TABLE qrtz_scheduler_state ( SCHED_NAME VARCHAR(120) NOT NULL, INSTANCE_NAME VARCHAR(200) NOT NULL, LAST_CHECKIN_TIME NUMERIC(13) NOT NULL, CHECKIN_INTERVAL NUMERIC(13) NOT NULL, PRIMARY KEY (SCHED_NAME,INSTANCE_NAME) )
2014.05.09 13:38:25|0|1|statement||CREATE TABLE qrtz_locks ( SCHED_NAME VARCHAR(120) NOT NULL, LOCK_NAME VARCHAR(40) NOT NULL, PRIMARY KEY (SCHED_NAME,LOCK_NAME) )
2014.05.09 13:38:25|0|1|statement||DROP TABLE BATCH_STEP_EXECUTION_CONTEXT IF EXISTS
2014.05.09 13:38:25|1|1|statement||DROP TABLE BATCH_JOB_EXECUTION_CONTEXT IF EXISTS
2014.05.09 13:38:25|0|1|statement||DROP TABLE BATCH_STEP_EXECUTION IF EXISTS
2014.05.09 13:38:25|0|1|statement||DROP TABLE BATCH_JOB_EXECUTION_PARAMS IF EXISTS
2014.05.09 13:38:25|0|1|statement||DROP TABLE BATCH_JOB_EXECUTION IF EXISTS
2014.05.09 13:38:25|0|1|statement||DROP TABLE BATCH_JOB_INSTANCE IF EXISTS
2014.05.09 13:38:25|0|1|statement||DROP TABLE BATCH_STEP_EXECUTION_SEQ IF EXISTS
2014.05.09 13:38:25|1|1|statement||DROP TABLE BATCH_JOB_EXECUTION_SEQ IF EXISTS
2014.05.09 13:38:25|0|1|statement||DROP TABLE BATCH_JOB_SEQ IF EXISTS
2014.05.09 13:38:25|1|1|statement||CREATE TABLE BATCH_JOB_INSTANCE ( JOB_INSTANCE_ID BIGINT IDENTITY NOT NULL PRIMARY KEY , VERSION BIGINT , JOB_NAME VARCHAR(100) NOT NULL, JOB_KEY VARCHAR(32) NOT NULL, constraint JOB_INST_UN unique (JOB_NAME, JOB_KEY) ) 
2014.05.09 13:38:25|1|1|statement||CREATE TABLE BATCH_JOB_EXECUTION ( JOB_EXECUTION_ID BIGINT IDENTITY NOT NULL PRIMARY KEY , VERSION BIGINT , JOB_INSTANCE_ID BIGINT NOT NULL, CREATE_TIME TIMESTAMP NOT NULL, START_TIME TIMESTAMP DEFAULT NULL , END_TIME TIMESTAMP DEFAULT NULL , STATUS VARCHAR(10) , EXIT_CODE VARCHAR(100) , EXIT_MESSAGE VARCHAR(2500) , LAST_UPDATED TIMESTAMP, constraint JOB_INST_EXEC_FK foreign key (JOB_INSTANCE_ID) references BATCH_JOB_INSTANCE(JOB_INSTANCE_ID) ) 
2014.05.09 13:38:25|1|1|statement||CREATE TABLE BATCH_JOB_EXECUTION_PARAMS ( JOB_EXECUTION_ID BIGINT NOT NULL , TYPE_CD VARCHAR(6) NOT NULL , KEY_NAME VARCHAR(100) NOT NULL , STRING_VAL VARCHAR(250) , DATE_VAL TIMESTAMP DEFAULT NULL , LONG_VAL BIGINT , DOUBLE_VAL DOUBLE PRECISION , IDENTIFYING CHAR(1) NOT NULL , constraint JOB_EXEC_PARAMS_FK foreign key (JOB_EXECUTION_ID) references BATCH_JOB_EXECUTION(JOB_EXECUTION_ID) ) 
2014.05.09 13:38:25|1|1|statement||CREATE TABLE BATCH_STEP_EXECUTION ( STEP_EXECUTION_ID BIGINT IDENTITY NOT NULL PRIMARY KEY , VERSION BIGINT NOT NULL, STEP_NAME VARCHAR(100) NOT NULL, JOB_EXECUTION_ID BIGINT NOT NULL, START_TIME TIMESTAMP NOT NULL , END_TIME TIMESTAMP DEFAULT NULL , STATUS VARCHAR(10) , COMMIT_COUNT BIGINT , READ_COUNT BIGINT , FILTER_COUNT BIGINT , WRITE_COUNT BIGINT , READ_SKIP_COUNT BIGINT , WRITE_SKIP_COUNT BIGINT , PROCESS_SKIP_COUNT BIGINT , ROLLBACK_COUNT BIGINT , EXIT_CODE VARCHAR(100) , EXIT_MESSAGE VARCHAR(2500) , LAST_UPDATED TIMESTAMP, constraint JOB_EXEC_STEP_FK foreign key (JOB_EXECUTION_ID) references BATCH_JOB_EXECUTION(JOB_EXECUTION_ID) ) 
2014.05.09 13:38:25|0|1|statement||CREATE TABLE BATCH_STEP_EXECUTION_CONTEXT ( STEP_EXECUTION_ID BIGINT NOT NULL PRIMARY KEY, SHORT_CONTEXT VARCHAR(2500) NOT NULL, SERIALIZED_CONTEXT LONGVARCHAR , constraint STEP_EXEC_CTX_FK foreign key (STEP_EXECUTION_ID) references BATCH_STEP_EXECUTION(STEP_EXECUTION_ID) ) 
2014.05.09 13:38:25|1|1|statement||CREATE TABLE BATCH_JOB_EXECUTION_CONTEXT ( JOB_EXECUTION_ID BIGINT NOT NULL PRIMARY KEY, SHORT_CONTEXT VARCHAR(2500) NOT NULL, SERIALIZED_CONTEXT LONGVARCHAR , constraint JOB_EXEC_CTX_FK foreign key (JOB_EXECUTION_ID) references BATCH_JOB_EXECUTION(JOB_EXECUTION_ID) ) 
2014.05.09 13:38:25|0|1|statement||CREATE TABLE BATCH_STEP_EXECUTION_SEQ ( ID BIGINT IDENTITY )
2014.05.09 13:38:25|1|1|statement||CREATE TABLE BATCH_JOB_EXECUTION_SEQ ( ID BIGINT IDENTITY )
2014.05.09 13:38:25|0|1|statement||CREATE TABLE BATCH_JOB_SEQ ( ID BIGINT IDENTITY )
